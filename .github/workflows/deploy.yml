name: Déploiement Continu du Portfolio (React & Symfony)

# Déclenche le workflow à chaque push sur la branche 'main'
# Vous pouvez ajuster cela si votre branche de déploiement est différente
on:
  push:
    branches:
      - main
    paths:
      - 'projet-1/**'  # Déclenche seulement si le frontend change
      - 'be/**'        # Déclenche seulement si le backend change
      - '.github/workflows/**'  # Déclenche si le workflow change

jobs:
  # Job pour le déploiement du Front-end (React)
  deploy-frontend:
    runs-on: ubuntu-latest # Utilise un runner GitHub hébergé sur Ubuntu

    steps:
      - name: 🗂️ Checkout du code du dépôt
        uses: actions/checkout@v4 # Action pour récupérer le code de votre dépôt GitHub

      - name: 🟢 Configuration de Node.js
        uses: actions/setup-node@v4 # Action pour installer Node.js
        with:
          node-version: '20' # Utilisez une version LTS stable de Node.js, par exemple '20' ou '22'
          cache: 'npm' # Active la mise en cache des dépendances npm pour des builds plus rapides
          cache-dependency-path: projet-1/package-lock.json # Chemin vers votre fichier lock pour le cache

      - name: 📦 Installation des dépendances du Front-end (React)
        working-directory: ./projet-1 # Navigue vers le dossier de votre application React
        run: npm install # Exécute npm install pour installer les dépendances

      - name: 🏗️ Construction du Front-end (React)
        working-directory: ./projet-1 # S'assure d'être dans le bon répertoire pour le build
        run: npm run build # Exécute la commande de build de React (crée le dossier 'build')

      - name: 🚀 Déploiement du Front-end vers Hostinger via FTP
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.FTP_SERVER }} # L'adresse de votre serveur Hostinger
          user: ${{ secrets.FTP_USERNAME }} # Votre nom d'utilisateur Hostinger
          password: ${{ secrets.FTP_PASSWORD }} # Votre mot de passe Hostinger
          localDir: 'projet-1/build' # Le dossier local à transférer
          remoteDir: '/public_html' # Le dossier cible sur Hostinger

  # Job pour le déploiement du Back-end (Symfony) via FTP
  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-frontend # Ce job ne commencera qu'après que 'deploy-frontend' soit terminé avec succès
    env:
      FTP_SERVER: ${{ secrets.FTP_SERVER }}
      FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
      FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}

    steps:
      - name: 🗂️ Checkout du code du dépôt
        uses: actions/checkout@v4

      - name: 🐘 Configuration de PHP et Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo_mysql, zip, gd
          tools: composer:v2

      - name: 🧹 Configuration de l'environnement de production
        working-directory: ./be/app
        run: |
          echo "APP_ENV=prod" > .env.local
          echo "APP_SECRET=68207a7a25f8c8c61a5fb45bcb4cb995" >> .env.local
          echo "APP_DEBUG=false" >> .env.local
          echo 'DATABASE_URL="mysql://u729245499_MorvinQuernel:MorvinKevin0812@srv2000.hstgr.io:3306/u729245499_Portfolio"' >> .env.local
          echo "# ?serverVersion=10.11.10-MariaDB" >> .env.local
          echo "MESSENGER_TRANSPORT_DSN=doctrine://default?auto_setup=0" >> .env.local
          echo "" >> .env.local
          echo "MAILER_DSN=gmail+smtp://quernel.morvin@gmail.com:votre-mot-de-passe-app@default" >> .env.local
          echo "" >> .env.local
          echo "# CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'" >> .env.local
          echo "CORS_ALLOW_ORIGIN=https://morvin-quernel.com" >> .env.local
          echo "" >> .env.local
          echo "JWT_SECRET_KEY=%kernel.project_dir%/config/jwt/private.pem" >> .env.local
          echo "JWT_PUBLIC_KEY=%kernel.project_dir%/config/jwt/public.pem" >> .env.local
          echo "JWT_PASSPHRASE=8eb578eff730a7f04d1cd9ddc70c83d2a3e78177fed8d631858126731355ae9a" >> .env.local
          echo "" >> .env.local
          echo "REACT_APP_API_URL=http://localhost:8080" >> .env.local

      - name: 📦 Installation des dépendances Symfony
        working-directory: ./be/app
        env:
          APP_ENV: prod
          APP_DEBUG: false
        run: composer install --no-dev --optimize-autoloader --no-scripts

      - name: 🧹 Préparation des dossiers et permissions
        working-directory: ./be/app
        run: |
          mkdir -p var/cache
          mkdir -p var/log
          mkdir -p var/sessions
          mkdir -p public/bundles
          chmod -R 755 var/
          chmod -R 755 public/
          
      - name: 📝 Création du fichier .htaccess pour routage API
        working-directory: ./be/app
        run: |
          cat > .htaccess << 'EOF'
          # Router les requêtes vers Symfony
          RewriteEngine On
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule ^(.*)$ public/index.php [L,QSA]
          
          # Headers CORS
          <IfModule mod_headers.c>
              Header always set Access-Control-Allow-Origin "*"
              Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
              Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
          </IfModule>
          EOF

      - name: 🚀 Déploiement du Back-end vers Hostinger via FTP
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ env.FTP_SERVER }}
          user: ${{ env.FTP_USERNAME }}
          password: ${{ env.FTP_PASSWORD }}
          localDir: 'be/app'
          remoteDir: '/public_html/api'
          options: '--delete --exclude=node_modules/ --exclude=.git/'
